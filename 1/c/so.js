import{createSources}from"./sources/creating/createSources";import{s}from"./s";import{createRefsArray}from"../h/arrays/createRefsArray";import{fillIndexedCollection}from"./collections/fillIndexedCollection";import{SourceLoadHandler}from"./sources/SourceLoadHandler";export function so(o){var{componentsServices:{isLightboxOpenManager},core:{eventsDispatcher,globalEventsController,scrollbarRecompensor,sourceDisplayFacade,windowResizeActioner},elements,st,sws}=o;o.o=()=>{sws.c();sws.a();sws.b(opi);sws.b(oci);sws.b(oni);eventsDispatcher.dispatch("onShow");fillIndexedCollection(o,"sourceLoadHandlers",SourceLoadHandler);isLightboxOpenManager.set(true,oa);};o.i=()=>{o.ii=true;o.smw=createRefsArray(o);o.saw=createRefsArray(o);elements.sources=createRefsArray(o);fillIndexedCollection(o,"sourceLoadHandlers",SourceLoadHandler);s(o);eventsDispatcher.dispatch("onInit");isLightboxOpenManager.set(true,()=>{oa();createSources(o);});};function oa(){st.u();sourceDisplayFacade.displaySourcesWhichShouldBeDisplayed();document.documentElement.classList.add("fslightbox-open");scrollbarRecompensor.addRecompense();globalEventsController.attachListeners();windowResizeActioner.runActions();eventsDispatcher.dispatch("onOpen");}}
